#include <Adafruit_SH110X.h>
#include <Adafruit_NeoPixel.h>
#include <RotaryEncoder.h>
#include <Adafruit_TinyUSB.h>
#include <MIDI.h>
#include <EasyButton.h>
/*
#pragma once
#define logo_BMPWIDTH  112
#define logo3_BMPWIDTH  112
const unsigned char bitmap_logo[] PROGMEM = {
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B01111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11100000,B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B10000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000111,B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000001,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B01111111,B11111000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B01111111,B11111000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B01111111,B11111000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000001,B11111111,B11110000,B00000111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000111,B11111111,B11100000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B11111111,B11111111,B11000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B10000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111111,B11110000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11111111,B11111111,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B11111111,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00111111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111000
};

const unsigned char bitmap_logo3[] PROGMEM = {
   B00111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,
   B01000000,B00000000,B00000000,B00000000,B00000011,B00000000,B00000000,B00000100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,
   B10000000,B00000000,B00000000,B00000000,B00000000,B11000000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B01000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00000100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,
   B00111111,B11111111,B11111111,B11111111,B10000000,B00000000,B01000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,
   B00000000,B00000000,B00000000,B00000000,B01110000,B00000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00010000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000110,B00000000,B00010000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B00010000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B10000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B10000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B10000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B00000000,B00000000,B00000000,B00000000,B00000000,B10000000,B00001000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111000,
   B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B00001000,B00000100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000110,
   B00000000,B00000000,B00000000,B00000000,B00000010,B00000000,B00010000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B00000000,B00000000,B00000000,B00000000,B00000100,B00000000,B00010000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B00000000,B00000000,B00000000,B00000000,B00011000,B00000000,B00100000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B00011111,B11111111,B11111111,B11111111,B11100000,B00000000,B00100000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B01000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B10000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00000000,B00000100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000110,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00001100,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111000,
   B10000000,B00000000,B00000000,B00000000,B00000000,B00010000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00000000,B00000000,B00000000,B00000000,B01100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00000000,B00000000,B00000000,B00000011,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00000000,B00000000,B00000000,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B10000000,B00100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,
   B01000000,B01000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,
   B00111111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100
 };
*/ 
#define NUM_NEOPIXEL  12
#define PIN_NEOPIXEL  19
#define OLED_MOSI     27
#define OLED_CLK      26
#define OLED_DC       24
#define OLED_CS       22
#define OLED_RST      23
#define PIN_SWITCH    0

const int debounce = 5;
const int LED[8] = {1, 2, 4, 5, 7, 8, 10, 11};
const int MENU_LED[4] = {3, 6, 9, 12};
const byte x16[16] = {74, 84, 91, 96, 98, 96, 91, 84, 74, 64, 57, 52, 50, 52, 57, 64}; //Vertex coordinates
const byte y16[16] = {8,  10,  15,  22,  32, 42, 49, 54, 56, 54, 49, 42, 32, 22, 15,  10}; //Vertex coordinates
char const *noteNames[] = {"C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"};
const static byte euc16[17][16] PROGMEM = {
 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 {1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
 {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
 {1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
 {1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0},
 {1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0},
 {1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0},
 {1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
 {1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0},
 {1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1},
 {1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1},
 {1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1},
 {1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1},
 {1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},
 {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
 {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

char const *menus[5][5] = {
  {"STEP", "OFFSET", "NOTE", "LIMIT", "BPM"},
  {"CHAN", "GATE", "VELO", "SYNC", "SIGN"},
  {"SWING", "EMPTY", "EMPTY", "EMPTY", "EMPTY"},
  {"EMPTY", "EMPTY", "EMPTY", "EMPTY", "EMPTY"}
};

bool trg_in = 0; //external trigger in H=1,L=0
bool old_trg_in = 0;
unsigned long gate_timer = 0; //countermeasure of sw chattering

// Initialize Rotary Encoder
int oldPosition  = -999;
int newPosition = -999;

int ROTARYMIN = 0;
int ROTARYMAX = 16;

// Sequence variable
byte k = 0;
byte buf_count = 0;
byte line_xbuf[17];//Buffer for drawing lines
byte line_ybuf[17];//Buffer for drawing lines

// Global variables store
byte playing_step[8] = {0, 0, 0, 0, 0, 0, 0, 0}; //playing step number , CH1,2,3,4,5,6
int newButtonVal = 0;
int oldButtonVal = 0;
int currentMenuPos = 0;
int current_page = 0;
int j = 0;

int preset[8][8] ={
  {4, 4, 5, 3, 2, 16, 1, 3},                        // each channel hits
  {0, 2, 0, 8, 3, 9, 2 ,2},                         // each channele step offset
  {16, 16, 16, 16, 16, 16, 16, 16},                 // each channel max step
  {48, 48, 48, 48, 48, 48, 48, 48},                 // each channel default note
  {1, 0, 0, 0, 0, 0, 0, 0},                         // each channel mute 0 = off , 1 = on
  {10, 10, 10, 10, 10, 10, 10, 10},                 // each channel gate timer
  {1, 2, 3, 4, 5, 6, 7, 8},                         // midi channel
  {127, 127, 127, 127, 127, 127, 127, 127}          // each channel velocity
};


// Each channel param
//hyte hits[8] = {4, 4, 5, 3, 2, 16, 1, 3};//each channel hits
//byte offset[8] = {0, 2, 0, 8, 3, 9, 2 ,2};//each channele step offset
//byte limit[8] = {16, 16, 16, 16, 16, 16, 16, 16};//eache channel max step
//byte notes[8] = {48, 48, 48, 48, 48, 48, 48, 48};
//byte mute[8] = {1, 0, 0, 0, 0, 0, 0, 0}; //mute 0 = off , 1 = on

bool offset_buf[8][16];//offset buffer , Stores the offset result
byte select_ch = 0; //0~5 = each channel -1 , 6 = random mode
byte bar_now = 1;//count 16 steps, the bar will increase by 1.
byte bar_max[4] = {2, 4, 8, 16} ;//selectable bar
byte bar_select = 1;//selected bar
byte step_cnt = 0;//count 16 steps, the bar will increase by 1.
byte menu_position = 0;
bool disp_reflesh = 1;//0=not reflesh display , 1= reflesh display , countermeasure of display reflesh bussy
float BPM = 132.0;
int t2 = 0;
EasyButton button1(LED[0], debounce, true, false);
EasyButton button2(LED[1], debounce, true, false);
EasyButton button3(LED[2], debounce, true, false);
EasyButton button4(LED[3], debounce, true, false);
EasyButton button5(LED[4], debounce, true, false);
EasyButton button6(LED[5], debounce, true, false);
EasyButton button7(LED[6], debounce, true, false);
EasyButton button8(LED[7], debounce, true, false);
EasyButton menu_button1(MENU_LED[0], debounce, true, false);
EasyButton menu_button2(MENU_LED[1], debounce, true, false);
EasyButton menu_button3(MENU_LED[2], debounce, true, false);
EasyButton menu_button4(MENU_LED[3], debounce, true, false);
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUM_NEOPIXEL, PIN_NEOPIXEL, NEO_GRB + NEO_KHZ800);
Adafruit_SH1106G display = Adafruit_SH1106G(128, 64,OLED_MOSI, OLED_CLK, OLED_DC, OLED_RST, OLED_CS);
RotaryEncoder encoder(PIN_ROTB, PIN_ROTA, RotaryEncoder::LatchMode::FOUR3);
Adafruit_USBD_MIDI usb_midi;
MIDI_CREATE_INSTANCE(Adafruit_USBD_MIDI, usb_midi, usbMIDI);